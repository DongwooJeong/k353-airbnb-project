hist(property_info$PublishedMonthlyRate, xlim = c(0,30000))
# histogram
hist(property_info$PublishedMonthlyRate, xlim = c(0,50000))
property_info$PublishedMonthlyRate[property_info$PublishedMontlyRate>10000]
property_info$PublishedMonthlyRate[property_info$PublishedMontlyRate>5000]
property_info$PublishedMonthlyRate[property_info$PublishedMontlyRate>100]
property_info$PublishedNightlyRate[property_info$PublishedNightlyRate>2000]
property_info$PublishedMonthlyRate[property_info$PublishedMonthlyRate>20000]
# histogram
hist(property_info$PublishedNightlyRate, xlim = c(0,50000))
# histogram
hist(property_info$PublishedNightlyRate, xlim = c(0,10000))
# histogram
hist(property_info$PublishedNightlyRate, xlim = c(0,4000))
property_info$PublishedNightlyRate[property_info$PublishedNightlyRate>1000]
# histogram
hist(property_info$NumberofPhotos, xlim = c(0, 200))
# histogram
hist(property_info$NumberofPhotos, xlim = c(0, 150))
# histogram
hist(property_info$NumberofPhotos, xlim = c(0, 100))
property_info$NumberofPhotos[property_info$NumberofPhotos>100]
property_info$NumberofPhotos[property_info$NumberofPhotos>60]
property_info$ExtraPeopleFee[property_info$ExtraPeopleFee>100]
# histogram
hist(property_info$ExtraPeopleFee, xlim = c(0, 200))
# histogram
hist(property_info$ExtraPeopleFee, xlim = c(0, 100))
# histogram
hist(property_info$ExtraPeopleFee, xlim = c(0, 150))
# histogram
hist(property_info$ExtraPeopleFee, xlim = c(0, 105))
property_info$ExtraPeopleFee[property_info$ExtraPeopleFee>60]
property_info$ExtraPeopleFee[property_info$ExtraPeopleFee>70]
property_info$ExtraPeopleFee[property_info$ExtraPeopleFee>80]
# histogram
hist(property_info$CleaningFee, xlim = c(0, 500))
# histogram
hist(property_info$CleaningFee, xlim = c(0, 400))
# histogram
hist(property_info$CleaningFee, xlim = c(0, 300))
property_info$CleaningFee[property_info$CleaningFee>200]
# histogram
hist(property_info$MinimumStay, xlim = c(0, 300))
# histogram
hist(property_info$MinimumStay, xlim = c(0, 100))
# histogram
hist(property_info$MinimumStay, xlim = c(0, 50))
property_info$MinimumStay[property_info$MinimumStay>50]
property_info$MinimumStay[property_info$MinimumStay>20]
property_info$MinimumStay[property_info$MinimumStay>30]
property_info$MinimumStay[property_info$MinimumStay>40]
# histogram
hist(property_info$ResponseTimemin, xlim = c(0, 50))
# histogram
hist(property_info$ResponseTimemin, xlim = c(0, 500))
# histogram
hist(property_info$ResponseTimemin, xlim = c(0, 1000))
# histogram
hist(property_info$ResponseTimemin, xlim = c(0, 10000))
# histogram
hist(property_info$ResponseTimemin, xlim = c(0, 2000))
property_info$ResponseTimemin[property_info$ResponseTimemin>1500]
property_info$ResponseTimemin[property_info$ResponseTimemin>1000]
# histogram
hist(property_info$ResponseTimemin, xlim = c(0, 1500))
# histogram
hist(property_info$ResponseTimemin, xlim = c(1000, 1500))
# histogram
hist(property_info$ResponseTimemin, xlim = c(1000, 1500), ylim = c(0,500))
property_info$ResponseTimemin[property_info$ResponseTimemin>1400]
property_info$ResponseTimemin[property_info$ResponseTimemin>1440]
1440/60
# histogram
hist(property_info$ResponseRate, xlim = c(0, 1500), ylim = c(0,500))
# histogram
hist(property_info$ResponseRate, xlim = c(0, 1500))
# histogram
hist(property_info$ResponseRate, xlim = c(0, 100))
# histogram
hist(property_info$MaxGuests, xlim = c(0, 100))
# histogram
hist(property_info$MaxGuests, xlim = c(0, 20))
property_info$MaxGuests[property_info$MaxGuests>15]
# histogram
hist(property_info$Bedrooms, xlim = c(0, 20))
# histogram
hist(property_info$Bedrooms, xlim = c(0, 10))
property_info$Bedrooms[property_info$Bedrooms>10]
property_info$Bedrooms[property_info$Bedrooms>4]
property_info$Bedrooms[property_info$Bedrooms>5]
# histogram
hist(property_info$SecurityDeposit, xlim = c(0, 10))
# histogram
hist(property_info$SecurityDeposit, xlim = c(0, 1000))
# histogram
hist(property_info$SecurityDeposit, xlim = c(0, 10000))
# histogram
hist(property_info$SecurityDeposit, xlim = c(0, 6000))
property_info$SecurityDeposit[property_info$SecurityDeposit>2000]
load(url('https://www.dropbox.com/s/1nft4aj479wsqq9/AirbnbChallenge2.rdata?dl=1'))
# Data Cleansing
## BookingQ1
listing_2016Q1_booking = listing_2016Q1[listing_2016Q1$Status == 'R', ]
agg_booking_Q1 = aggregate(Status ~ PropertyID, data = listing_2016Q1_booking, FUN = length)
colnames(agg_booking_Q1) = c('PropertyID', 'BookingQ1')
property_info = merge(x = property_info, y = agg_booking_Q1, by = 'PropertyID', all.x = TRUE)
property_info$BookingQ1[is.na(property_info$BookingQ1)] = 0
## BookingQ2
listing_2016Q2_booking = listing_2016Q2[listing_2016Q2$Status == 'R', ]
agg_booking_Q2 = aggregate(Status ~ PropertyID, data = listing_2016Q2_booking, FUN = length)
colnames(agg_booking_Q2) = c('PropertyID', 'BookingQ2')
property_info = merge(x = property_info, y = agg_booking_Q2, by = 'PropertyID', all.x = TRUE)
property_info$BookingQ2[is.na(property_info$BookingQ2)] = 0
## BlockedQ1
listing_2016Q1_block = listing_2016Q1[listing_2016Q1$Status == 'B', ]
agg_block_Q1 = aggregate(Status ~ PropertyID, data = listing_2016Q1_block, FUN = length)
colnames(agg_block_Q1) = c('PropertyID', 'BlockedQ1')
property_info = merge(x = property_info, y = agg_block_Q1, by = 'PropertyID', all.x = TRUE)
property_info$BlockedQ1[is.na(property_info$BlockedQ1)] = 0
## BlockedQ2
listing_2016Q2_block = listing_2016Q2[listing_2016Q2$Status == 'B', ]
agg_block_Q2 = aggregate(Status ~ PropertyID, data = listing_2016Q2_block, FUN = length)
colnames(agg_block_Q2) = c('PropertyID', 'BlockedQ2')
property_info = merge(x = property_info, y = agg_block_Q2, by = 'PropertyID', all.x = TRUE)
property_info$BlockedQ2[is.na(property_info$BlockedQ2)] = 0
## PriceQ1
agg_price_Q1 = aggregate(Price ~ PropertyID, data = listing_2016Q1, FUN = mean)
colnames(agg_price_Q1)[2] = 'ListPriceQ1'
property_info = merge(x = property_info, y = agg_price_Q1, by = 'PropertyID', all.x = TRUE)
## PriceQ2
agg_price_Q2 = aggregate(Price ~ PropertyID, data = listing_2016Q2, FUN = mean)
colnames(agg_price_Q2)[2] = 'ListPriceQ2'
property_info = merge(x = property_info, y = agg_price_Q2, by = 'PropertyID', all.x = TRUE)
################## data cleansing from p1
#### Month
listing_2016Q1$Month = format(as.Date(listing_2016Q1$Date), "%m")
listing_2016Q2$Month = format(as.Date(listing_2016Q2$Date), "%m")
#### BookingJan
listing_2016Jan_booking = listing_2016Q1[listing_2016Q1$Month=="01" & listing_2016Q1$Status == 'R', ]
agg_booking_Jan = aggregate(Status ~ PropertyID, data = listing_2016Jan_booking, FUN = length)
colnames(agg_booking_Jan) = c("PropertyID", "BookingJan")
property_info = merge(x = property_info, y=agg_booking_Jan, by='PropertyID', all.x=TRUE)
property_info$BookingJan[is.na(property_info$BookingJan)] = 0
#### BookingFeb
listing_2016Feb_booking = listing_2016Q1[listing_2016Q1$Month=="02" & listing_2016Q1$Status == 'R', ]
agg_booking_Feb = aggregate(Status ~ PropertyID, data = listing_2016Feb_booking, FUN = length)
colnames(agg_booking_Feb) = c("PropertyID", "BookingFeb")
property_info = merge(x = property_info, y=agg_booking_Feb, by='PropertyID', all.x=TRUE)
property_info$BookingFeb[is.na(property_info$BookingFeb)] = 0
#### BookingMar
listing_2016Mar_booking = listing_2016Q1[listing_2016Q1$Month=="03" & listing_2016Q1$Status == 'R', ]
agg_booking_Mar = aggregate(Status ~ PropertyID, data = listing_2016Mar_booking, FUN = length)
colnames(agg_booking_Mar) = c("PropertyID", "BookingMar")
property_info = merge(x = property_info, y=agg_booking_Mar, by='PropertyID', all.x=TRUE)
property_info$BookingMar[is.na(property_info$BookingMar)] = 0
#### BookingApr
listing_2016Apr_booking = listing_2016Q2[listing_2016Q2$Month=="04" & listing_2016Q2$Status == 'R', ]
agg_booking_Apr = aggregate(Status ~ PropertyID, data = listing_2016Apr_booking, FUN = length)
colnames(agg_booking_Apr) = c("PropertyID", "BookingApr")
property_info = merge(x = property_info, y=agg_booking_Apr, by='PropertyID', all.x=TRUE)
property_info$BookingApr[is.na(property_info$BookingApr)] = 0
#### BookingMay
listing_2016May_booking = listing_2016Q2[listing_2016Q2$Month=="05" & listing_2016Q2$Status == 'R', ]
agg_booking_May = aggregate(Status ~ PropertyID, data = listing_2016May_booking, FUN = length)
colnames(agg_booking_May) = c("PropertyID", "BookingMay")
property_info = merge(x = property_info, y=agg_booking_May, by='PropertyID', all.x=TRUE)
property_info$BookingMay[is.na(property_info$BookingMay)] = 0
#### BookingJun
listing_2016Jun_booking = listing_2016Q2[listing_2016Q2$Month=="06" & listing_2016Q2$Status == 'R', ]
agg_booking_Jun = aggregate(Status ~ PropertyID, data = listing_2016Jun_booking, FUN = length)
colnames(agg_booking_Jun) = c("PropertyID", "BookingJun")
property_info = merge(x = property_info, y=agg_booking_Jun, by='PropertyID', all.x=TRUE)
property_info$BookingJun[is.na(property_info$BookingJun)] = 0
#### BlockedJan
listing_2016Jan_block = listing_2016Q1[listing_2016Q1$Month=="01" & listing_2016Q1$Status == 'B',]
agg_block_Jan = aggregate(Status ~ PropertyID, data = listing_2016Jan_block, FUN = length)
colnames(agg_block_Jan) = c('PropertyID','BlockedJan')
property_info = merge(x = property_info, y = agg_block_Jan, by = 'PropertyID', all.x = TRUE)
property_info$BlockedJan[is.na(property_info$BlockedJan)] = 0
#### BlockedFeb
listing_2016Feb_block = listing_2016Q1[listing_2016Q1$Month=="02" & listing_2016Q1$Status == 'B',]
agg_block_Feb = aggregate(Status ~ PropertyID, data = listing_2016Feb_block, FUN = length)
colnames(agg_block_Feb) = c('PropertyID','BlockedFeb')
property_info = merge(x = property_info, y = agg_block_Feb, by = 'PropertyID', all.x = TRUE)
property_info$BlockedFeb[is.na(property_info$BlockedFeb)] = 0
#### BlockedMar
listing_2016Mar_block = listing_2016Q1[listing_2016Q1$Month=="03" & listing_2016Q1$Status == 'B',]
agg_block_Mar = aggregate(Status ~ PropertyID, data = listing_2016Mar_block, FUN = length)
colnames(agg_block_Mar) = c('PropertyID','BlockedMar')
property_info = merge(x = property_info, y = agg_block_Mar, by = 'PropertyID', all.x = TRUE)
property_info$BlockedMar[is.na(property_info$BlockedMar)] = 0
#### BlockedApr
listing_2016Apr_block = listing_2016Q2[listing_2016Q2$Month=="04" & listing_2016Q2$Status == 'B',]
agg_block_Apr = aggregate(Status ~ PropertyID, data = listing_2016Apr_block, FUN = length)
colnames(agg_block_Apr) = c('PropertyID','BlockedApr')
property_info = merge(x = property_info, y = agg_block_Apr, by = 'PropertyID', all.x = TRUE)
property_info$BlockedApr[is.na(property_info$BlockedApr)] = 0
#### BlockedMay
listing_2016May_block = listing_2016Q2[listing_2016Q2$Month=="05" & listing_2016Q2$Status == 'B',]
agg_block_May = aggregate(Status ~ PropertyID, data = listing_2016May_block, FUN = length)
colnames(agg_block_May) = c('PropertyID','BlockedMay')
property_info = merge(x = property_info, y = agg_block_May, by = 'PropertyID', all.x = TRUE)
property_info$BlockedMay[is.na(property_info$BlockedMay)] = 0
#### BlockedJun
listing_2016Jun_block = listing_2016Q2[listing_2016Q2$Month=="06" & listing_2016Q2$Status == 'B',]
agg_block_Jun = aggregate(Status ~ PropertyID, data = listing_2016Jun_block, FUN = length)
colnames(agg_block_Jun) = c('PropertyID','BlockedJun')
property_info = merge(x = property_info, y = agg_block_Jun, by = 'PropertyID', all.x = TRUE)
property_info$BlockedJun[is.na(property_info$BlockedJun)] = 0
#### newly generated monthly price
## PriceJan
listing_2016Jan_price = listing_2016Q1[listing_2016Q1$Month=="01",]
agg_price_jan = aggregate(Price ~ PropertyID, data = listing_2016Jan_price, FUN = mean)
colnames(agg_price_jan)[2] = 'ListPriceJan'
property_info = merge(x = property_info, y = agg_price_jan, by = 'PropertyID', all.x = TRUE)
property_info$ListPriceJan[is.na(property_info$ListPriceJan)] = 0
## PriceFeb
listing_2016Feb_price = listing_2016Q1[listing_2016Q1$Month=="02",]
agg_price_feb = aggregate(Price ~ PropertyID, data = listing_2016Feb_price, FUN = mean)
colnames(agg_price_feb)[2] = 'ListPriceFeb'
property_info = merge(x = property_info, y = agg_price_feb, by = 'PropertyID', all.x = TRUE)
property_info$ListPriceFeb[is.na(property_info$ListPriceFeb)] = 0
## PriceMar
listing_2016Mar_price = listing_2016Q1[listing_2016Q1$Month=="03",]
agg_price_mar = aggregate(Price ~ PropertyID, data = listing_2016Mar_price, FUN = mean)
colnames(agg_price_mar)[2] = 'ListPriceMar'
property_info = merge(x = property_info, y = agg_price_mar, by = 'PropertyID', all.x = TRUE)
property_info$ListPriceMar[is.na(property_info$ListPriceMar)] = 0
## PriceApr
listing_2016Apr_price = listing_2016Q2[listing_2016Q2$Month=="04",]
agg_price_apr = aggregate(Price ~ PropertyID, data = listing_2016Apr_price, FUN = mean)
colnames(agg_price_apr)[2] = 'ListPriceApr'
property_info = merge(x = property_info, y = agg_price_apr, by = 'PropertyID', all.x = TRUE)
property_info$ListPriceApr[is.na(property_info$ListPriceApr)] = 0
## PriceMay
listing_2016May_price = listing_2016Q2[listing_2016Q2$Month=="05",]
agg_price_may = aggregate(Price ~ PropertyID, data = listing_2016May_price, FUN = mean)
colnames(agg_price_may)[2] = 'ListPriceMay'
property_info = merge(x = property_info, y = agg_price_may, by = 'PropertyID', all.x = TRUE)
property_info$ListPriceMay[is.na(property_info$ListPriceMay)] = 0
## PriceJun
listing_2016Jun_price = listing_2016Q2[listing_2016Q2$Month=="06",]
agg_price_jun = aggregate(Price ~ PropertyID, data = listing_2016Jun_price, FUN = mean)
colnames(agg_price_jun)[2] = 'ListPriceJun'
property_info = merge(x = property_info, y = agg_price_jun, by = 'PropertyID', all.x = TRUE)
property_info$ListPriceJun[is.na(property_info$ListPriceJun)] = 0
#### Anomalies
sum(is.na(property_info$PropertyID))
mean(is.na(property_info$PublishedMonthlyRate))
mean(is.na(property_info$PublishedWeeklyRate))
mean(is.na(property_info$PublishedNightlyRate))
mean(is.na(property_info$ResponseRate))
mean(is.na(property_info$Bedrooms))
mean(is.na(property_info$Bathrooms))
mean(is.na(property_info$OverallRating))
mean(is.na(property_info$PropertyType))
mean(is.na(property_info$ListingType))
sum(is.na(property_info$ListingType))
mean(is.na(property_info$NumberofPhotos))
mean(is.na(property_info$HostID))
mean(is.na(property_info$ResponseTimemin))
property_info$ResponseTimemin[is.na(property_info$ResponseTimemin)] = mean(property_info$ResponseTimemin, na.rm = TRUE)
sum(is.na(property_info$CancellationPolicy))
mean(is.na(property_info$CleaningFee))
mean(is.na(property_info$SecurityDeposit))
mean(is.na(property_info$NumberofReviews))
mean(is.na(property_info$ExtraPeopleFee))
mean(is.na(property_info$CleaningFee))
mean(is.na(property_info$NumberofReviews))
mean(is.na(property_info$PublishedMonthlyRate))
mean(is.na(property_info$PublishedWeeklyRate))
mean(is.na(property_info$ResponseRate))
mean(is.na(property_info$Bedrooms))
mean(is.na(property_info$Bathrooms))
mean(is.na(property_info$OverallRating))
mean(is.na(property_info$PropertyType))
mean(is.na(property_info$NumberofPhotos))
mean(is.na(property_info$HostID))
mean(is.na(property_info$ResponseTimemin))
load(url('https://www.dropbox.com/s/1nft4aj479wsqq9/AirbnbChallenge2.rdata?dl=1'))
# Data Cleansing
## BookingQ1
listing_2016Q1_booking = listing_2016Q1[listing_2016Q1$Status == 'R', ]
agg_booking_Q1 = aggregate(Status ~ PropertyID, data = listing_2016Q1_booking, FUN = length)
colnames(agg_booking_Q1) = c('PropertyID', 'BookingQ1')
property_info = merge(x = property_info, y = agg_booking_Q1, by = 'PropertyID', all.x = TRUE)
property_info$BookingQ1[is.na(property_info$BookingQ1)] = 0
## BookingQ2
listing_2016Q2_booking = listing_2016Q2[listing_2016Q2$Status == 'R', ]
agg_booking_Q2 = aggregate(Status ~ PropertyID, data = listing_2016Q2_booking, FUN = length)
colnames(agg_booking_Q2) = c('PropertyID', 'BookingQ2')
property_info = merge(x = property_info, y = agg_booking_Q2, by = 'PropertyID', all.x = TRUE)
property_info$BookingQ2[is.na(property_info$BookingQ2)] = 0
## BlockedQ1
listing_2016Q1_block = listing_2016Q1[listing_2016Q1$Status == 'B', ]
agg_block_Q1 = aggregate(Status ~ PropertyID, data = listing_2016Q1_block, FUN = length)
colnames(agg_block_Q1) = c('PropertyID', 'BlockedQ1')
property_info = merge(x = property_info, y = agg_block_Q1, by = 'PropertyID', all.x = TRUE)
property_info$BlockedQ1[is.na(property_info$BlockedQ1)] = 0
## BlockedQ2
listing_2016Q2_block = listing_2016Q2[listing_2016Q2$Status == 'B', ]
agg_block_Q2 = aggregate(Status ~ PropertyID, data = listing_2016Q2_block, FUN = length)
colnames(agg_block_Q2) = c('PropertyID', 'BlockedQ2')
property_info = merge(x = property_info, y = agg_block_Q2, by = 'PropertyID', all.x = TRUE)
property_info$BlockedQ2[is.na(property_info$BlockedQ2)] = 0
## PriceQ1
agg_price_Q1 = aggregate(Price ~ PropertyID, data = listing_2016Q1, FUN = mean)
colnames(agg_price_Q1)[2] = 'ListPriceQ1'
property_info = merge(x = property_info, y = agg_price_Q1, by = 'PropertyID', all.x = TRUE)
## PriceQ2
agg_price_Q2 = aggregate(Price ~ PropertyID, data = listing_2016Q2, FUN = mean)
colnames(agg_price_Q2)[2] = 'ListPriceQ2'
property_info = merge(x = property_info, y = agg_price_Q2, by = 'PropertyID', all.x = TRUE)
################## data cleansing from p1
#### Month
listing_2016Q1$Month = format(as.Date(listing_2016Q1$Date), "%m")
listing_2016Q2$Month = format(as.Date(listing_2016Q2$Date), "%m")
#### BookingJan
listing_2016Jan_booking = listing_2016Q1[listing_2016Q1$Month=="01" & listing_2016Q1$Status == 'R', ]
agg_booking_Jan = aggregate(Status ~ PropertyID, data = listing_2016Jan_booking, FUN = length)
colnames(agg_booking_Jan) = c("PropertyID", "BookingJan")
property_info = merge(x = property_info, y=agg_booking_Jan, by='PropertyID', all.x=TRUE)
property_info$BookingJan[is.na(property_info$BookingJan)] = 0
#### BookingFeb
listing_2016Feb_booking = listing_2016Q1[listing_2016Q1$Month=="02" & listing_2016Q1$Status == 'R', ]
agg_booking_Feb = aggregate(Status ~ PropertyID, data = listing_2016Feb_booking, FUN = length)
colnames(agg_booking_Feb) = c("PropertyID", "BookingFeb")
property_info = merge(x = property_info, y=agg_booking_Feb, by='PropertyID', all.x=TRUE)
property_info$BookingFeb[is.na(property_info$BookingFeb)] = 0
#### BookingMar
listing_2016Mar_booking = listing_2016Q1[listing_2016Q1$Month=="03" & listing_2016Q1$Status == 'R', ]
agg_booking_Mar = aggregate(Status ~ PropertyID, data = listing_2016Mar_booking, FUN = length)
colnames(agg_booking_Mar) = c("PropertyID", "BookingMar")
property_info = merge(x = property_info, y=agg_booking_Mar, by='PropertyID', all.x=TRUE)
property_info$BookingMar[is.na(property_info$BookingMar)] = 0
#### BookingApr
listing_2016Apr_booking = listing_2016Q2[listing_2016Q2$Month=="04" & listing_2016Q2$Status == 'R', ]
agg_booking_Apr = aggregate(Status ~ PropertyID, data = listing_2016Apr_booking, FUN = length)
colnames(agg_booking_Apr) = c("PropertyID", "BookingApr")
property_info = merge(x = property_info, y=agg_booking_Apr, by='PropertyID', all.x=TRUE)
property_info$BookingApr[is.na(property_info$BookingApr)] = 0
#### BookingMay
listing_2016May_booking = listing_2016Q2[listing_2016Q2$Month=="05" & listing_2016Q2$Status == 'R', ]
agg_booking_May = aggregate(Status ~ PropertyID, data = listing_2016May_booking, FUN = length)
colnames(agg_booking_May) = c("PropertyID", "BookingMay")
property_info = merge(x = property_info, y=agg_booking_May, by='PropertyID', all.x=TRUE)
property_info$BookingMay[is.na(property_info$BookingMay)] = 0
#### BookingJun
listing_2016Jun_booking = listing_2016Q2[listing_2016Q2$Month=="06" & listing_2016Q2$Status == 'R', ]
agg_booking_Jun = aggregate(Status ~ PropertyID, data = listing_2016Jun_booking, FUN = length)
colnames(agg_booking_Jun) = c("PropertyID", "BookingJun")
property_info = merge(x = property_info, y=agg_booking_Jun, by='PropertyID', all.x=TRUE)
property_info$BookingJun[is.na(property_info$BookingJun)] = 0
#### BlockedJan
listing_2016Jan_block = listing_2016Q1[listing_2016Q1$Month=="01" & listing_2016Q1$Status == 'B',]
agg_block_Jan = aggregate(Status ~ PropertyID, data = listing_2016Jan_block, FUN = length)
colnames(agg_block_Jan) = c('PropertyID','BlockedJan')
property_info = merge(x = property_info, y = agg_block_Jan, by = 'PropertyID', all.x = TRUE)
property_info$BlockedJan[is.na(property_info$BlockedJan)] = 0
#### BlockedFeb
listing_2016Feb_block = listing_2016Q1[listing_2016Q1$Month=="02" & listing_2016Q1$Status == 'B',]
agg_block_Feb = aggregate(Status ~ PropertyID, data = listing_2016Feb_block, FUN = length)
colnames(agg_block_Feb) = c('PropertyID','BlockedFeb')
property_info = merge(x = property_info, y = agg_block_Feb, by = 'PropertyID', all.x = TRUE)
property_info$BlockedFeb[is.na(property_info$BlockedFeb)] = 0
#### BlockedMar
listing_2016Mar_block = listing_2016Q1[listing_2016Q1$Month=="03" & listing_2016Q1$Status == 'B',]
agg_block_Mar = aggregate(Status ~ PropertyID, data = listing_2016Mar_block, FUN = length)
colnames(agg_block_Mar) = c('PropertyID','BlockedMar')
property_info = merge(x = property_info, y = agg_block_Mar, by = 'PropertyID', all.x = TRUE)
property_info$BlockedMar[is.na(property_info$BlockedMar)] = 0
#### BlockedApr
listing_2016Apr_block = listing_2016Q2[listing_2016Q2$Month=="04" & listing_2016Q2$Status == 'B',]
agg_block_Apr = aggregate(Status ~ PropertyID, data = listing_2016Apr_block, FUN = length)
colnames(agg_block_Apr) = c('PropertyID','BlockedApr')
property_info = merge(x = property_info, y = agg_block_Apr, by = 'PropertyID', all.x = TRUE)
property_info$BlockedApr[is.na(property_info$BlockedApr)] = 0
#### BlockedMay
listing_2016May_block = listing_2016Q2[listing_2016Q2$Month=="05" & listing_2016Q2$Status == 'B',]
agg_block_May = aggregate(Status ~ PropertyID, data = listing_2016May_block, FUN = length)
colnames(agg_block_May) = c('PropertyID','BlockedMay')
property_info = merge(x = property_info, y = agg_block_May, by = 'PropertyID', all.x = TRUE)
property_info$BlockedMay[is.na(property_info$BlockedMay)] = 0
#### BlockedJun
listing_2016Jun_block = listing_2016Q2[listing_2016Q2$Month=="06" & listing_2016Q2$Status == 'B',]
agg_block_Jun = aggregate(Status ~ PropertyID, data = listing_2016Jun_block, FUN = length)
colnames(agg_block_Jun) = c('PropertyID','BlockedJun')
property_info = merge(x = property_info, y = agg_block_Jun, by = 'PropertyID', all.x = TRUE)
property_info$BlockedJun[is.na(property_info$BlockedJun)] = 0
#### newly generated monthly price
## PriceJan
listing_2016Jan_price = listing_2016Q1[listing_2016Q1$Month=="01",]
agg_price_jan = aggregate(Price ~ PropertyID, data = listing_2016Jan_price, FUN = mean)
colnames(agg_price_jan)[2] = 'ListPriceJan'
property_info = merge(x = property_info, y = agg_price_jan, by = 'PropertyID', all.x = TRUE)
property_info$ListPriceJan[is.na(property_info$ListPriceJan)] = 0
## PriceFeb
listing_2016Feb_price = listing_2016Q1[listing_2016Q1$Month=="02",]
agg_price_feb = aggregate(Price ~ PropertyID, data = listing_2016Feb_price, FUN = mean)
colnames(agg_price_feb)[2] = 'ListPriceFeb'
property_info = merge(x = property_info, y = agg_price_feb, by = 'PropertyID', all.x = TRUE)
property_info$ListPriceFeb[is.na(property_info$ListPriceFeb)] = 0
## PriceMar
listing_2016Mar_price = listing_2016Q1[listing_2016Q1$Month=="03",]
agg_price_mar = aggregate(Price ~ PropertyID, data = listing_2016Mar_price, FUN = mean)
colnames(agg_price_mar)[2] = 'ListPriceMar'
property_info = merge(x = property_info, y = agg_price_mar, by = 'PropertyID', all.x = TRUE)
property_info$ListPriceMar[is.na(property_info$ListPriceMar)] = 0
## PriceApr
listing_2016Apr_price = listing_2016Q2[listing_2016Q2$Month=="04",]
agg_price_apr = aggregate(Price ~ PropertyID, data = listing_2016Apr_price, FUN = mean)
colnames(agg_price_apr)[2] = 'ListPriceApr'
property_info = merge(x = property_info, y = agg_price_apr, by = 'PropertyID', all.x = TRUE)
property_info$ListPriceApr[is.na(property_info$ListPriceApr)] = 0
## PriceMay
listing_2016May_price = listing_2016Q2[listing_2016Q2$Month=="05",]
agg_price_may = aggregate(Price ~ PropertyID, data = listing_2016May_price, FUN = mean)
colnames(agg_price_may)[2] = 'ListPriceMay'
property_info = merge(x = property_info, y = agg_price_may, by = 'PropertyID', all.x = TRUE)
property_info$ListPriceMay[is.na(property_info$ListPriceMay)] = 0
## PriceJun
listing_2016Jun_price = listing_2016Q2[listing_2016Q2$Month=="06",]
agg_price_jun = aggregate(Price ~ PropertyID, data = listing_2016Jun_price, FUN = mean)
colnames(agg_price_jun)[2] = 'ListPriceJun'
property_info = merge(x = property_info, y = agg_price_jun, by = 'PropertyID', all.x = TRUE)
property_info$ListPriceJun[is.na(property_info$ListPriceJun)] = 0
mean(is.na(property_info$ResponseTimemin))
mean(is.na(property_info$CancellationPolicy))
mean(is.na(property_info$CleaningFee))
mean(is.na(property_info$SecurityDeposit))
mean(is.na(property_info$ExtraPeopleFee))
source("C:/Users/dongw/OneDrive - Indiana University/Desktop/K353-project2/k353-airbnb-project/data-cleansing.R")
source("C:/Users/dongw/OneDrive - Indiana University/Desktop/K353-project2/k353-airbnb-project/data-cleansing.R")
source("C:/Users/dongw/OneDrive - Indiana University/Desktop/K353-project2/k353-airbnb-project/cross-validation-MAE.R")
n_round = 20
set.seed(0)
property_info_train$CVLabel = sample(x = 1:n_round, size = nrow(property_info_train), replace = TRUE)
cv_mse_vec_b = rep(NA, n_round)
for (idx in 1:n_round) {
lr_model_b = lm(formula = NumBlockedDays2016Q3 ~ Neighborhood + Superhost + OverallRating + NumberofReviews + ListingType + PropertyID +
ResponseRate + Bedrooms + Bathrooms + PropertyType + PublishedMonthlyRate + PublishedNightlyRate + NumberofPhotos + HostID +
BookingJan + BookingApr + BookingMay + BookingJun + BlockedJan + BlockedFeb + CreatedDate + ResponseTimemin + ExtraPeopleFee +
BlockedApr + BlockedMay + BlockedQ1 + BlockedQ2 + ListPriceQ2 + CleaningFee + MinimumStay + BusinessReady +
ListPriceApr + ListPriceJun + LogBookingApr + LogBookingMay +
LogBookingQ2 + LogBlockedQ1 + LogBlockedQ2 + LogPNR + LogPMR + LogPWR + LogLPJan + LogLPJun,
data = property_info_train[property_info_train$CVLabel != idx, ])
lr_pred_b = predict(object = lr_model_b, newdata = property_info_train[property_info_train$CVLabel==idx,])
cv_mse_vec_b[idx] = mean((lr_pred_b - property_info_train$NumBlockedDays2016Q3[property_info_train$CVLabel==idx])^2)
}
print(mean(sqrt(cv_mse_vec_b)))
sum(property_info$PropertyType[property_info$PropertyType = "unknown property type"])
property_info$PropertyType[property_info$PropertyType = "unknown property type"]
sum(property_info$PropertyType = "unknown property type")
sum(property_info$PropertyType == "unknown property type")
property_info$Logcf = log(property_info$CleaningFee)
property_info$Logcf[property_info$Logcf =="-Inf"] = 0
# Data set
property_info_test = property_info[property_info$PropertyID %in% PropertyID_test, ]
property_info_train = property_info[!property_info$PropertyID %in% PropertyID_test, ]
property_info_train = merge(x = property_info_train, y = reserve_2016Q3_train, by = 'PropertyID', all.x = TRUE)
property_info_train = merge(x = property_info_train, y = blocked_2016Q3_train, by = 'PropertyID', all.x = TRUE)
property_info_train = merge(x = property_info_train, y = price_2016Q3_train, by = 'PropertyID', all.x = TRUE)
# Price
n_round = 20
set.seed(0)
property_info_train$CVLabel = sample(x = 1:n_round, size = nrow(property_info_train), replace = TRUE)
cv_mse_vec_p = rep(NA, n_round)
for (idx in 1:n_round) {
lr_model_p = lm(formula = Price2016Q3 ~ NumberofReviews + ResponseRate + Bathrooms + ListingType + PropertyType + NumberofPhotos + BusinessReady +
PublishedMonthlyRate + PublishedNightlyRate + PublishedWeeklyRate + LogPNR + LogPMR + MaxGuests + CleaningFee + Logcf + MinimumStay +
BlockedQ1 + BlockedQ2 + BookingJan + BookingFeb + BlockedMar + BookingJun + ListPriceJan + ListPriceJun + SecurityDeposit + Latitude + Longitude +
LogBookingMar + LogBookingQ2 + LogLPMar + LogLPApr,
data = property_info_train[property_info_train$CVLabel != idx, ])
lr_pred_p = predict(object = lr_model_p, newdata = property_info_train[property_info_train$CVLabel==idx,])
cv_mse_vec_p[idx] = mean(abs(lr_pred_p - property_info_train$Price2016Q3[property_info_train$CVLabel==idx]))
}
print(mean(cv_mse_vec_p))
# Booking
n_round = 20
set.seed(0)
property_info_train$CVLabel = sample(x = 1:n_round, size = nrow(property_info_train), replace = TRUE)
cv_mse_vec_r = rep(NA, n_round)
for (idx in 1:n_round) {
lr_model_r = lm(formula = NumReserveDays2016Q3 ~ ResponseRate + OverallRating + NumberofReviews + LogPNR + LogPMR + LogPWR + NumberofPhotos +
PublishedMonthlyRate + PublishedNightlyRate + PublishedWeeklyRate + ListingType + PropertyType + PropertyID + HostID + BusinessReady +
BookingQ2 + BlockedQ1 + BlockedQ2 + BookingJun + BlockedMar + BlockedMay + BlockedJun + CreatedDate +  MaxGuests + ExtraPeopleFee +
BookingMar + BookingApr + BlockedJan + CleaningFee + InstantbookEnabled + Latitude + Longitude + Logcf +
LogBookingQ2 + LogBlockedQ2 + LogBookingApr + LogBookingJun + LogBlockedJan +
ListPriceJan + ListPriceMar + ListPriceJun + LogLPJan + LogLPFeb + LogLPMar + LogLPApr + LogLPMay + LogLPJun,
data = property_info_train[property_info_train$CVLabel != idx, ])
lr_pred_r = predict(object = lr_model_r, newdata = property_info_train[property_info_train$CVLabel==idx,])
cv_mse_vec_r[idx] = mean(abs(lr_pred_r - property_info_train$NumReserveDays2016Q3[property_info_train$CVLabel==idx]))
}
print(mean(cv_mse_vec_r))
# Blocked
n_round = 20
set.seed(0)
property_info_train$CVLabel = sample(x = 1:n_round, size = nrow(property_info_train), replace = TRUE)
cv_mse_vec_b = rep(NA, n_round)
for (idx in 1:n_round) {
lr_model_b = lm(formula = NumBlockedDays2016Q3 ~ Neighborhood + Superhost + OverallRating + NumberofReviews + ListingType + PropertyID +
ResponseRate + Bedrooms + Bathrooms + PropertyType + PublishedMonthlyRate + PublishedNightlyRate + NumberofPhotos + HostID +
BookingJan + BookingApr + BookingMay + BookingJun + BlockedJan + BlockedFeb + CreatedDate + ResponseTimemin + ExtraPeopleFee +
BlockedApr + BlockedMay + BlockedQ1 + BlockedQ2 + ListPriceQ2 + CleaningFee + MinimumStay + BusinessReady + Logcf +
ListPriceApr + ListPriceJun + LogBookingApr + LogBookingMay +
LogBookingQ2 + LogBlockedQ1 + LogBlockedQ2 + LogPNR + LogPMR + LogPWR + LogLPJan + LogLPJun,
data = property_info_train[property_info_train$CVLabel != idx, ])
lr_pred_b = predict(object = lr_model_b, newdata = property_info_train[property_info_train$CVLabel==idx,])
cv_mse_vec_b[idx] = mean(abs(lr_pred_b - property_info_train$NumBlockedDays2016Q3[property_info_train$CVLabel==idx]))
}
print(mean(cv_mse_vec_b))
